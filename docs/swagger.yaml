definitions:
  model.Template:
    properties:
      blur:
        type: number
      bright:
        type: number
      contrast:
        type: number
      exposition:
        type: number
      name:
        type: string
      noise:
        type: number
      saturation:
        type: number
      tone:
        type: number
      user_id:
        type: integer
      vignette:
        type: number
    type: object
  model.Templates:
    properties:
      templates:
        items:
          $ref: '#/definitions/model.Template'
        type: array
    type: object
  model.User:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  routes.UserWithCode:
    properties:
      code:
        type: string
      email:
        type: string
    type: object
host: https://photofocus-production.up.railway.app
info:
  contact: {}
  title: PhotoFocus API
  version: 1.0.4
paths:
  /authorization:
    post:
      consumes:
      - application/json
      description: Авторизация пользователя
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: int
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "401":
          description: Пользователя с такой почтой не существует
          schema:
            type: string
        "409":
          description: Неверный пароль
          schema:
            type: string
      summary: AuthorizationUser
      tags:
      - User
  /get-templates/:id:
    get:
      consumes:
      - application/json
      description: Отправляет шаблон по индефикатору пользователя
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Templates'
        "502":
          description: Ошибка сервера, попробуйте позже
          schema:
            type: string
      summary: GetTemplate
      tags:
      - Templates
  /register:
    post:
      consumes:
      - application/json
      description: После ввода кода подтверждения регистрирует пользователя
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/routes.UserWithCode'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: int
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "408":
          description: Неверный код, попробуйте заново
          schema:
            type: string
        "500":
          description: Ошибка сервера, попробуйте позже
          schema:
            type: string
      summary: RegisterUser
      tags:
      - User
  /save-template:
    post:
      consumes:
      - application/json
      description: Создание нового шаблона
      parameters:
      - description: Template
        in: body
        name: template
        required: true
        schema:
          $ref: '#/definitions/model.Template'
      produces:
      - application/json
      responses:
        "201":
          description: Шаблон успешно создан
          schema:
            type: string
        "502":
          description: Ошибка сервера, попробуйте позже
          schema:
            type: string
      summary: SaveTemplate
      tags:
      - Templates
  /verification:
    post:
      consumes:
      - application/json
      description: Отправляет код подтверждения при помощи smtp.gmail.com на почту
        пользователя
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: Код успешно отправлен
          schema:
            type: string
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "409":
          description: Пользователь с такой почтой уже существует
          schema:
            type: string
        "500":
          description: Проверте корректность почты или попробуйте позже
          schema:
            type: string
      summary: VerificationEmail
      tags:
      - User
swagger: "2.0"
